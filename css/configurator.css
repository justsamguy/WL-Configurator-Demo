/* WoodLab Configurator - Custom Styles */

html {
  height: 100%;
}

/* Base layout for grid */
body {
  font-family: 'Inter', system-ui, sans-serif;
  display: grid; /* Ensure body is a grid container */
  height: 100vh; /* Force body to exactly match viewport height so grid sizing (1fr) works predictably */
  overflow: hidden; /* Hide page-level overflow; internal panels will scroll instead */
}

/* Root grid layout controlled via .app-root to avoid relying on Tailwind arbitrary utilities */
.app-root {
  display: grid;
  grid-template-rows: auto auto 1fr auto; /* Header, Stage Bar, Main, Footer */
}

/* Make the root grid fill the viewport and avoid causing the overall page to scroll. */
.app-root {
  height: 100vh;
  overflow: hidden; /* let internal regions manage their own scrolling */
}

@media (min-width: 1024px) {
  .app-root {
    grid-template-columns: 60fr 40fr; /* 60/40 split */
    grid-template-rows: auto auto 1fr auto; /* Header, Stage Bar, Main Content, Footer */
  }
}

/* Viewer container: constrain and center the 3D viewer */
.viewer-container {
  width: 100%;
  max-width: 980px; /* sensible max width for viewer */
  margin: 0 auto;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 1rem;
  box-sizing: border-box;
}

/* Constrain decorative or brand graphics so they can't overwhelm the layout */
.decorative-graphic, .viewer-placeholder-img {
  max-width: 320px;
  max-height: 320px;
  width: auto;
  height: auto;
  display: block;
}

.brand-fallback {
  opacity: 0.95;
  max-width: 220px; /* slightly smaller for brand fallback */
}

/* Site logo sizing â€” ensure the header logo never grows too large on wide screens */
.site-logo {
  max-width: 220px;
  height: auto;
}

/* Ensure header logo is centered */
header .flex.justify-center.items-center {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Aggressive constraints for any unexpectedly large decorative graphics (like the V-shape) */
#sidebar img, #sidebar svg, main img, main svg, footer img, footer svg {
  max-width: 360px;
  max-height: 360px;
  width: auto;
  height: auto;
  object-fit: contain;
}

/* Inline UI icons (small controls) should always remain small and not scale with container */
.inline-icon, .btn-icon svg, .control-btn svg, #viewer-controls svg {
  width: 1.25rem !important;
  height: 1.25rem !important;
  max-width: none;
  max-height: none;
}

/* Ensure help arrow rotation happens around center */
#help-support-arrow {
  transform-origin: 50% 50%;
}

/* Strong global safety: prevent any SVG from rendering at enormous sizes.
   This will override inline width/height attributes in most cases. */
body svg {
  max-width: 560px !important;
  max-height: 560px !important;
  width: auto !important;
  height: auto !important;
  display: inline-block;
}

/* If some decorative image is absolutely enormous, reduce its opacity and scale as a last resort */
.decorative-graphic.oversized {
  transform: scale(0.28) translateZ(0);
  transform-origin: top left;
  opacity: 0.95;
}

/* Make the viewer area respect available viewport height (account for header/stage/footer) */
#viewer {
  width: 100%;
  height: calc(100vh - var(--header-height) - var(--stage-bar-height) - var(--footer-height) - 3rem);
  max-height: 900px;
}

/* Header / stage-bar tweaks */
#stage-bar {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
}

.nav-btn {
  padding: 0.45rem 0.9rem;
  border-radius: 0.375rem;
}

.stage-btn {
  padding: 0.45rem 0.75rem;
  border-radius: 0.375rem;
}

/* Ensure images and SVGs don't blow out layout */
img, svg {
  max-width: 100%;
  height: auto;
  display: block;
}

/* Main content grid layout for desktop */
@media (min-width: 1024px) {
  body {
    grid-template-columns: 60fr 40fr; /* 60/40 split as specified */
    grid-template-rows: auto auto 1fr auto; /* Header, Stage Bar, Main Content, Footer */
  }

  /* Prevent the secondary column from expanding uncontrollably on very wide screens */
  @media (min-width: 1400px) {
    body {
      grid-template-columns: minmax(760px, 1fr) 360px; /* fixed-ish sidebar width */
    }
  }



  #stage-bar {
    grid-column: 1 / -1; /* Span all columns */
    grid-row: 2 / 3;
  }

  main {
    grid-column: 1 / 2; /* Viewer in first column */
    grid-row: 3 / 4; /* In the main content row */
  overflow: visible; /* Allow viewer controls to be visible outside strict clipping */
  height: 100%; /* Ensure main fills its grid cell */
  }

  #sidebar, #app-sidebar {
    grid-column: 2 / 3; /* Sidebar in second column */
    grid-row: 3 / 4; /* In the main content row */
    width: 100%; /* Take full width of the column */
    /* Sidebar should be a flex column so we can split scrollable region and fixed footer-like area */
    display: flex;
    flex-direction: column;
    height: calc(100vh - var(--header-height) - var(--stage-bar-height) - var(--footer-height));
    max-height: calc(100vh - var(--header-height) - var(--stage-bar-height) - var(--footer-height));
    overflow: hidden; /* Prevent double scrollbars; internal area will scroll */
  }

  /* Scrollable region inside the sidebar */
  #app-sidebar .sidebar-scroll {
    overflow-y: auto;
    padding-right: 8px; /* give space for scrollbar */
  }

  /* Fixed bottom area inside the sidebar should not scroll with the tiles */
  #app-sidebar #sidebar-fixed-bottom {
    flex: 0 0 auto;
  }

  footer {
    grid-column: 1 / -1; /* Span all columns */
    grid-row: 4 / 5;
  }
  
  /* Ensure viewer takes full height */
  #viewer {
    height: calc(100vh - var(--header-height) - var(--stage-bar-height) - var(--footer-height));
    /* The actual height will be managed by flex-1 in main-content */
  }
  
  /* Controls bar styling */
  #viewer-controls-container {
  height: auto;
  margin-top: 1rem;
  z-index: 20; /* Ensure viewer controls float above other content */
  }
}

/* Tooltip styles */
.tooltip {
  position: relative;
  display: inline-block;
}

.tooltip:hover::after {
  content: attr(data-tip);
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  white-space: nowrap;
  z-index: 10;
  margin-bottom: 5px;
}

.tooltip:hover::before {
  content: "";
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  border-width: 5px;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.8) transparent transparent transparent;
  margin-bottom: -5px;
  transform: translateX(-50%) rotate(180deg);
}

/* Banner animations */
.banner {
  animation: slide-in 0.3s ease-out forwards;
  opacity: 0;
  transform: translateY(-20px);
}

@keyframes slide-in {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.banner.opacity-0 {
  animation: slide-out 0.3s ease-in forwards;
}

@keyframes slide-out {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-20px);
  }
}

/* Focus styles */
:focus-visible {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

/* Model card styles */
.option-card {
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  cursor: pointer;
  position: relative;
}

.option-card:focus, .option-card:hover {
  box-shadow: 0 0 0 2px #2563eb33, 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  border-color: #2563eb;
  outline: none;
  z-index: 1;
}

.option-card[aria-pressed="true"] {
  border-color: #2563eb;
  box-shadow: 0 0 0 2px #2563eb33, 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
}

.option-card[disabled] {
  opacity: 0.6;
  cursor: not-allowed;
  box-shadow: none;
  border-color: #e5e7eb;
  background-color: #f9fafb;
}

/* Full-width model stage: center a single-column large preview layout */
/* Fullwidth model stage: center a constrained content area and let inner grid control columns */
.fullwidth-model-stage {
  display: block;
  padding: 2rem 1.5rem;
  max-width: 1200px;
  margin: 0 auto;
}

/* Override embedded model list (which has grid-cols-1) to be a 3-column grid when in model stage */
.fullwidth-model-stage #model-options {
  display: grid !important;
  grid-template-columns: repeat(3, minmax(220px, 1fr)) !important;
  gap: 1.25rem !important;
  align-items: start;
}

/* Responsive: collapse to 2/1 columns on smaller widths */
@media (max-width: 1100px) {
  .fullwidth-model-stage #model-options { grid-template-columns: repeat(2, minmax(200px, 1fr)) !important; }
}
@media (max-width: 640px) {
  .fullwidth-model-stage #model-options { grid-template-columns: 1fr !important; }
}

/* Model selection stage layout */
#stage-panel-0 {
  max-width: 1200px;
  margin: 0 auto;
  padding: 1.5rem;
}

/* Hide sidebar for model stage (assuming body has class 'stage-0' when model stage is active) */
.stage-0 #app-sidebar {
  display: none;
}

/* Make main take full width when sidebar is hidden */
.stage-0 main {
  grid-column: 1 / -1;
}

.model-row {
  margin-bottom: 2rem;
}

.model-row h3 {
  border-bottom: 1px solid #e5e7eb;
  padding-bottom: 0.5rem;
}

.model-row-grid {
  display: flex;
  gap: 1rem;
  overflow-x: auto;
  padding: 0.5rem 0;
}

.model-row .option-card {
  flex: 0 0 280px;
  min-height: 200px;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  position: relative;
}

.model-row .viewer-placeholder-img {
  width: 100%;
  height: 140px;
  object-fit: cover;
  border-radius: 6px;
  margin-bottom: 1rem;
}

.model-row .title-price-row {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  margin-bottom: 0.5rem;
}

.model-row .title {
  font-weight: 600;
  font-size: 16px;
}

.model-row .price-delta {
  font-size: 14px;
  color: #374151;
  font-weight: 500;
}

.model-row .description {
  font-size: 14px;
  color: #6b7280;
  text-align: center;
  line-height: 1.4;
}

.model-row .option-card.selected::after {
  content: 'âœ“';
  position: absolute;
  top: 8px;
  right: 8px;
  background: #2563eb;
  color: white;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  font-weight: bold;
}

.model-row .option-card.selected {
  border-width: 3px;
  border-color: #2563eb;
  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);
}

.model-row .option-card.selected .title {
  font-weight: 700;
}

/* Sidebar model options: smaller cards, 3 columns, 5px gaps for testing */
#app-sidebar #model-options {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 5px;
}

#app-sidebar #model-options .option-card {
  padding: 6px;
  min-height: 84px;
}

#app-sidebar #model-options .viewer-placeholder-img {
  height: 64px;
  object-fit: cover;
  margin-bottom: 6px;
}

/* By default, hide any option-card that represents a model so model tiles don't
   appear in the sidebar or other stage panels unless the Select Model stage is active.
   Model cards are identified by data-id starting with 'mdl-'. CSS can't directly
   match attribute prefixes across generated content universally, so rely on the
   body class 'show-model-tiles' toggled by JS. When the class is absent, hide
   model-specific option cards using an attribute selector. */
body:not(.show-model-tiles) .option-card[data-id^="mdl-"] {
  display: none !important;
}

/* Generic stage options grid used by stage panels (max 2-column auto-fit, 8px gap) */
.stage-options-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 8px;
}
.stage-options-grid .option-card {
  padding: 12px;
  min-height: 120px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  text-align: center;
  position: relative;
}
.stage-options-grid .viewer-placeholder-img {
  width: 100%;
  height: 80px;
  object-fit: cover;
  border-radius: 4px;
  margin-bottom: 8px;
}
.stage-options-grid .option-card .title-price-row {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
  margin-bottom: 4px;
}
.stage-options-grid .option-card .title {
  font-weight: 600;
  font-size: 14px;
}
.stage-options-grid .option-card .price-delta {
  font-size: 12px;
  color: #6b7280;
}
.stage-options-grid .option-card .description {
  font-size: 12px;
  color: #6b7280;
  line-height: 1.3;
}
.stage-options-grid .option-card.selected::after {
  content: 'âœ“';
  position: absolute;
  top: 4px;
  right: 4px;
  background: #2563eb;
  color: white;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  font-weight: bold;
}
.stage-options-grid .option-card.selected {
  border-width: 3px;
  border-color: #2563eb;
}
.stage-options-grid .option-card.selected .title {
  font-weight: 700;
}
.stage-options-grid .option-card[disabled] {
  filter: grayscale(100%);
  opacity: 0.6;
}
.stage-options-grid .option-card[disabled]:hover::before {
  content: attr(data-tooltip);
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  white-space: nowrap;
  z-index: 10;
  margin-bottom: 5px;
}

@media (max-width: 1100px) {
  #stage-panel-0 #model-options { grid-template-columns: repeat(2, minmax(200px, 1fr)) !important; }
}
@media (max-width: 640px) {
  #stage-panel-0 #model-options { grid-template-columns: 1fr !important; }
}

.fullwidth-model-stage .option-card {
  width: 100%;
  min-height: 220px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 1rem;
  box-sizing: border-box;
}

.fullwidth-model-stage .viewer-placeholder-img {
  width: 100%;
  height: 180px;
  object-fit: contain;
  background: #ffffff;
}

.fullwidth-model-stage h3, .fullwidth-model-stage h2 {
  text-align: center;
}

/* Stage button styles */
.stage-btn[aria-current="step"] {
  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.05);
}

/* Define CSS variables for heights */
:root {
  --header-height: 60px; /* Approximate height of header */
  --stage-bar-height: 50px; /* Approximate height of stage bar */
  --footer-height: 80px; /* Approximate height of footer */
}

/* Responsive adjustments */
@media (max-width: 1023px) { /* Tablet and smaller */
  body {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto 1fr auto; /* Header, Stage Bar, Main, Footer */
  }



  #stage-bar {
    grid-column: 1 / -1;
    grid-row: 2 / 3;
    position: static; /* Remove fixed position for tablet/mobile */
  }

  main {
    grid-column: 1 / -1;
    grid-row: 3 / 4;
    flex-direction: column; /* Stack viewer and sidebar vertically */
  }

  #sidebar, #app-sidebar {
    width: 100%;
    max-width: 100%;
    border-left: none;
    border-top: 1px solid #e5e7eb;
    grid-column: 1 / -1;
    grid-row: 4 / 5; /* Sidebar below main content */
  }

  footer {
    grid-column: 1 / -1;
    grid-row: 5 / 6;
    position: static; /* Remove fixed position for tablet/mobile */
  }
}

@media (max-width: 767px) { /* Mobile */
  #stage-bar {
    position: fixed; /* Re-apply fixed position for mobile */
    bottom: 0;
    top: auto;
    z-index: 40;
    height: var(--stage-bar-height); /* Ensure fixed height */
  }

  footer {
    bottom: var(--stage-bar-height); /* Adjust footer position to be above stage bar */
    height: var(--footer-height); /* Ensure fixed height */
  }

  /* Adjust main and sidebar height for mobile fixed elements */
  main, #sidebar, #app-sidebar {
    height: calc(100vh - var(--header-height) - var(--stage-bar-height) - var(--footer-height));
    overflow-y: auto; /* Allow scrolling within main/sidebar if content overflows */
  }
}

/* Loading animation */
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.animate-spin {
  animation: spin 1s linear infinite;
}

/* Transitions */
#loading-overlay {
  transition: opacity 0.3s ease-out;
}

/* Help drawer scroll */
#help-content {
  max-height: calc(100vh - 120px);
  overflow-y: auto;
}

/* Collapsible Help & Support in Sidebar */
#sidebar-help-content {
  transition: max-height 0.3s ease-out, opacity 0.3s ease-out;
  max-height: 0;
  overflow: hidden;
  opacity: 0;
}

#sidebar-help-content.open {
  max-height: 500px; /* Arbitrary large value to allow content to show */
  opacity: 1;
}

#help-support-arrow.rotated {
  transform: rotate(180deg);
}

/* Viewer controls styling */
#viewer-controls {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 2rem; /* Increase spacing between controls */

/* ---------------------- High-impact visual improvements ---------------------- */

/* Typographic scale and spacing tokens */
:root {
  --space-xs: 6px;
  --space-sm: 12px;
  --space-md: 18px;
  --space-lg: 24px;
  --max-site-width: 1200px;
  --brand-green: #1b8f6b;
  --brand-dark: #263238;
}

/* Global typography tweaks */
body {
  font-family: 'Inter', system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial;
  color: #0f1720;
  line-height: 1.45;
  font-size: 15px;
}

h1, h2, h3 {
  color: #111827;
  margin-bottom: var(--space-sm);
}

p, label { font-size: 15px; color: #374151; }

/* Main layout helper used for centering and max width */
.main-layout {
  max-width: var(--max-site-width);
  margin: 0 auto;
  padding: 0 var(--space-md);
  display: grid;
  grid-template-columns: 1fr 340px;
  gap: 24px;
}

/* Viewer panel: center and make visual focus */
.viewer-panel {
  background: linear-gradient(180deg, #f6f8fa 0%, #ffffff 100%);
  border-radius: 8px;
  box-shadow: 0 6px 18px rgba(20,30,40,0.06);
  padding: 16px;
  min-height: 420px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Stepper / top-stage bar */
.top-stepper {
  display:flex;
  gap:8px;
  align-items:center;
  padding:12px 16px;
  background:#f3f6f8;
  border-radius:8px;
  box-shadow: 0 1px 0 rgba(0,0,0,0.03) inset;
  margin: 12px auto;
  width: calc(100% - 32px);
  max-width: var(--max-site-width);
}
.top-stepper .step {
  flex:1;
  height:10px;
  background:#e6eef3;
  border-radius:6px;
  position:relative;
}
.top-stepper .step.active { background: var(--brand-dark); }
.top-stepper .step.completed { background: var(--brand-green); }

/* Summary card (right column) */
.summary-card {
  position: sticky;
  top: 24px;
  background: #fff;
  border-radius: 8px;
  padding: 18px;
  box-shadow: 0 8px 30px rgba(20,30,40,0.06);
  border: 1px solid rgba(20,30,40,0.04);
  align-self: start;
}
.summary-card .total { font-weight:700; font-size:1.15rem; color:#101827; }
.summary-card .next-btn {
  display:inline-block;
  background:var(--brand-green);
  color:#fff;
  padding:10px 16px;
  border-radius:6px;
  text-decoration:none;
  margin-top:12px;
}

/* Model card & thumbnails */
.model-card {
  display:flex;
  gap:12px;
  align-items:center;
}
.model-card img { width:160px; height:160px; object-fit:cover; border-radius:10px; box-shadow: 0 6px 18px rgba(20,30,40,0.06); }
.model-card .select-btn { background:var(--brand-dark); color:#fff; padding:8px 12px; border-radius:6px; }

/* Responsive: collapse two-column layout into single column on small screens */
@media (max-width: 880px) {
  .main-layout { grid-template-columns: 1fr; }
  .top-stepper { width: calc(100% - 24px); }
  .summary-card { position: relative; top: auto; }
}

/* Small helpers */
.muted { color:#6b7280; }
.rounded-md { border-radius: 8px; }

/* End high-impact rules */
  padding: 0.75rem 1rem;
  background-color: #f9fafb;
  border-radius: 0.5rem;
}

#viewer-controls button, 
#viewer-controls span {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 9999px;
  background-color: white;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  border: 1px solid #e5e7eb;
  transition: all 0.2s;
}

#viewer-controls button:hover,
#viewer-controls span:hover {
  background-color: #f3f4f6;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
}

#viewer-controls svg {
  width: 1.25rem;
  height: 1.25rem;
  color: #4b5563;
}

/* Control button styling */
.control-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 9999px;
  background-color: white;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  border: 1px solid #e5e7eb;
  transition: all 0.2s;
}

.control-btn:hover {
  background-color: #f3f4f6;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
}

.control-btn:focus-visible {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

.control-btn svg {
  width: 1.25rem;
  height: 1.25rem;
  color: #4b5563;
}

/* Loading animation enhancement */
#loading-overlay {
  background-color: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(4px);
  transition: opacity 0.3s ease-out;
}

#loading-overlay .animate-spin {
  border-top-color: transparent;
}

/* Button Styling System (plain CSS replacements for Tailwind @apply) */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem 1rem;
  border: 1px solid transparent;
  font-size: 0.875rem;
  font-weight: 500;
  border-radius: 0.375rem;
  box-shadow: 0 1px 2px rgba(0,0,0,0.05);
  transition: all 0.2s ease-in-out;
}

.btn-primary {
  color: #fff;
  background-color: #4f46e5; /* Indigo-600 */
}

.btn-primary:hover { background-color: #4338ca; }

.btn-secondary {
  color: #3730a3; /* Indigo-700 */
  background-color: #e0e7ff; /* Indigo-100 */
  border: 1px solid #e5e7eb;
}

.btn-tertiary {
  color: #374151; /* Gray-700 */
  background-color: transparent;
  border: none;
}

.btn-icon {
  padding: 0.375rem;
  color: #9ca3af;
  border-radius: 9999px;
}

.btn-sm { padding: 0.375rem 0.75rem; font-size: 0.75rem; }
.btn-lg { padding: 0.75rem 1.5rem; font-size: 1rem; }

/* Control button */
.control-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 9999px;
  background-color: #fff;
  box-shadow: 0 1px 2px rgba(0,0,0,0.05);
  border: 1px solid #e5e7eb;
  color: #4b5563;
}

.control-btn svg { width: 1.25rem; height: 1.25rem; }

.option-card { position: relative; display: flex; flex-direction: column; align-items: center; justify-content: center; padding: 1rem; border-radius: 0.5rem; border: 1px solid #e5e7eb; background: #fff; cursor: pointer; text-align: center; }
.option-card.selected { border-color: #6366f1; box-shadow: 0 0 0 4px rgba(99,102,241,0.08); }
.option-card:hover { border-color: #818cf8; }
.option-card.disabled { opacity: 0.5; cursor: not-allowed; background: #f8fafc; }

.stage-btn { flex: 1; padding: 0.5rem 0.25rem; text-align: center; font-size: 0.875rem; font-weight: 500; color: #6b7280; border-bottom: 2px solid transparent; }
.stage-btn.active { border-bottom-color: #6366f1; color: #4f46e5; }

.nav-btn { display: inline-flex; align-items: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-size: 0.875rem; font-weight: 500; color: #fff; background-color: #374151; border: 1px solid transparent; }
.nav-btn:hover { background-color: #1f2937; }

/* ======================================
   BUTTON STYLING SYSTEM
   ====================================== */

/* Base button styles */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: 500;
  border-radius: 0.375rem;
  transition: all 0.2s ease;
  cursor: pointer;
}

.btn:focus-visible {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

.btn:disabled {
  cursor: not-allowed;
  opacity: 0.7;
}

/* Button sizes */
.btn-sm {
  padding: 0.375rem 0.75rem;
  font-size: 0.875rem;
}

.btn-md {
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
}

.btn-lg {
  padding: 0.625rem 1.25rem;
  font-size: 1rem;
}

/* Primary button - for main actions */
.btn-primary {
  background-color: #2563eb; /* Blue 600 */
  color: white;
  font-weight: 600;
  border: none;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.btn-primary:hover {
  background-color: #1d4ed8; /* Blue 700 */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.btn-primary:active {
  background-color: #1e40af; /* Blue 800 */
  transform: translateY(1px);
}

.btn-primary:disabled {
  background-color: #93c5fd; /* Blue 300 */
}

/* Secondary button - for alternative actions */
.btn-secondary {
  background-color: #f3f4f6; /* Gray 100 */
  color: #1f2937; /* Gray 800 */
  border: 1px solid #e5e7eb; /* Gray 200 */
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.btn-secondary:hover {
  background-color: #e5e7eb; /* Gray 200 */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.btn-secondary:active {
  background-color: #d1d5db; /* Gray 300 */
  transform: translateY(1px);
}

.btn-secondary:disabled {
  background-color: #f9fafb; /* Gray 50 */
  color: #9ca3af; /* Gray 400 */
}

/* Tertiary button - for less important actions */
.btn-tertiary {
  background-color: transparent;
  color: #4b5563; /* Gray 600 */
  border: none;
}

.btn-tertiary:hover {
  background-color: #f3f4f6; /* Gray 100 */
}

.btn-tertiary:active {
  background-color: #e5e7eb; /* Gray 200 */
}

.btn-tertiary:disabled {
  color: #9ca3af; /* Gray 400 */
}

/* Icon button - for icon-only buttons */
.btn-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 9999px;
  background-color: transparent;
  color: #4b5563; /* Gray 600 */
  border: none;
}

.btn-icon:hover {
  background-color: #f3f4f6; /* Gray 100 */
}

.btn-icon:active {
  background-color: #e5e7eb; /* Gray 200 */
}

.btn-icon svg {
  width: 1.25rem;
  height: 1.25rem;
}

/* Primary icon button variant */
.btn-icon-primary {
  background-color: #2563eb; /* Blue 600 */
  color: white;
}

.btn-icon-primary:hover {
  background-color: #1d4ed8; /* Blue 700 */
}

/* Control button - for 3D viewer controls */
.control-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 9999px;
  background-color: white;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  border: 1px solid #e5e7eb; /* Gray 200 */
  transition: all 0.2s;
}

.control-btn:hover {
  background-color: #f3f4f6; /* Gray 100 */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.control-btn:active {
  background-color: #e5e7eb; /* Gray 200 */
  transform: translateY(1px);
}

.control-btn svg {
  width: 1.25rem;
  height: 1.25rem;
  color: #4b5563; /* Gray 600 */
}

/* Option card - for selectable cards */
.option-card {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: left;
  width: 100%;
  padding: 0.75rem;
  border-radius: 0.5rem;
  border: 1px solid #e5e7eb; /* Gray 200 */
  background-color: white;
  transition: all 0.2s;
  cursor: pointer;
  position: relative;
}

.option-card:hover {
  border-color: #93c5fd; /* Blue 300 */
  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);
}

.option-card:focus {
  outline: none;
  border-color: #2563eb; /* Blue 600 */
  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.2);
}

.option-card[aria-pressed="true"] {
  border-color: #2563eb; /* Blue 600 */
  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.2);
}

.option-card[disabled] {
  opacity: 0.6;
  cursor: not-allowed;
  box-shadow: none;
  border-color: #e5e7eb; /* Gray 200 */
}

/* Loading skeleton overlay used when options change */
.viewer-skeleton {
  transition: opacity 0.28s ease;
  background: rgba(255,255,255,0.6);
}
.skeleton-card {
  border-radius: 0.5rem;
  box-shadow: inset 0 2px 10px rgba(0,0,0,0.04);
}

/* Stage navigation button */
.stage-btn {
  padding: 0.375rem 0.75rem;
  border-radius: 0.375rem;
  font-weight: 500;
  transition: all 0.2s;
}
/* Visual mapping for stage buttons (requested):
   - Non-clickable (disabled) = light tone (no hover)
   - Active stage (aria-current="step") = blue
   - Clickable previous stages = dark tone, hover -> blue
*/

/* Base: neutral/light look so disabled/empty appear subtle */
.stage-btn {
  background-color: transparent;
  color: #6b7280; /* Gray 500 */
}

/* Active stage: prominent blue */
.stage-btn[aria-current="step"] {
  background-color: #2563eb; /* Blue 600 */
  color: #ffffff;
  font-weight: 600;
  border-bottom-color: transparent;
}

/* Clickable stages (usually previous stages) â€” dark background, white text.
   Hovering a clickable stage shows the blue accent. */
.stage-btn:not([aria-current="step"]):not([disabled]) {
  background-color: #1f2937; /* Gray 800 / dark */
  color: #ffffff;
}
.stage-btn:not([aria-current="step"]):not([disabled]):hover {
  background-color: #2563eb; /* Blue 600 on hover */
  color: #ffffff;
}

/* Disabled (non-clickable) stages: light, no hover effect */
.stage-btn[disabled] {
  background-color: #f3f4f6; /* Gray 100 / light */
  color: #9ca3af; /* Gray 400 */
  cursor: not-allowed;
  pointer-events: none; /* ensure no hover/interaction */
}

/* Navigation buttons (prev/next) */
.nav-btn {
  padding: 0.375rem 0.75rem;
  border-radius: 0.375rem;
  font-weight: 500;
  transition: all 0.2s;
}

/* New mapping for nav buttons similar to stage buttons:
   - Disabled uses previous hover (Gray 100)
   - Enabled uses blue
   - Hover uses the current grey (dark gray background)
*/
/* Prev/Next button rules per request:
   - Disabled (non-clickable): light, no hover
   - Enabled (clickable): dark default, hover -> blue
*/

.nav-btn:disabled {
  background-color: #f3f4f6; /* Gray 100 / light */
  color: #9ca3af; /* Gray 400 */
  cursor: not-allowed;
  pointer-events: none;
}

.nav-btn:not([disabled]) {
  background-color: #1f2937; /* Gray 800 / dark */
  color: #ffffff;
}

.nav-btn:not([disabled]):hover {
  background-color: #2563eb; /* Blue 600 on hover */
  color: #ffffff;
}
