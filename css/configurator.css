/* WoodLab Configurator - Custom Styles */

html {
  height: 100%;
}

/*
  CSS flags and conventions used in this stylesheet

  - body.show-model-tiles: toggled by JS when the Select Model stage is active.
    It signals the stylesheet to expand the model tiles area to span the full
    viewport, hide the sidebar, and adjust header/stage positioning.

  - .fullwidth-model-stage: applied to the stage panel/content that should
    take the full width of the viewport when model-selection is active.

  - Prefer scoping under body.show-model-tiles instead of using !important to
    keep the cascade predictable and maintainable.
*/

/* Base layout for grid */
body {
  font-family: 'Inter', system-ui, sans-serif;
  display: grid; /* Ensure body is a grid container */
  height: 100vh; /* Force body to exactly match viewport height so grid sizing (1fr) works predictably */
  overflow: hidden; /* Hide page-level overflow; internal panels will scroll instead */
}

/* Root grid layout controlled via .app-root to avoid relying on Tailwind arbitrary utilities */
.app-root {
  display: grid;
  grid-template-rows: auto auto 1fr auto; /* Header, Stage Bar, Main, Footer */
}

/* Make the root grid fill the viewport and avoid causing the overall page to scroll. */
.app-root {
  height: 100vh;
  overflow: hidden; /* let internal regions manage their own scrolling */
}

@media (min-width: 1024px) {
  .app-root {
    grid-template-columns: 60fr 40fr; /* 60/40 split */
    grid-template-rows: auto auto 1fr auto; /* Header, Stage Bar, Main Content, Footer */
  }
}

/* Ensure the header spans the full grid width (both columns) */
#app-header {
  grid-column: 1 / -1;
  width: 100%;
}

/* Make header visually separate and reserve space so it doesn't overlap content */
#app-header {
  position: sticky; /* stick to top while remaining in flow */
  top: 0;
  z-index: 60; /* above viewer controls and most elements */
  background: linear-gradient(180deg, rgba(255,255,255,0.98), rgba(255,255,255,0.95));
  border-bottom: 1px solid rgba(16,24,40,0.04);
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

/* Viewer container: constrain and center the 3D viewer */
.viewer-container {
  width: 100%;
  max-width: 980px; /* sensible max width for viewer */
  margin: 0 auto;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 1rem;
  box-sizing: border-box;
}

/* Constrain decorative or brand graphics so they can't overwhelm the layout */
.decorative-graphic, .viewer-placeholder-img {
  max-width: 320px;
  max-height: 320px;
  width: auto;
  height: auto;
  display: block;
}

.brand-fallback {
  opacity: 0.95;
  max-width: 220px; /* slightly smaller for brand fallback */
}

/* Site logo sizing â€” ensure the header logo never grows too large on wide screens */
.site-logo {
  max-width: 220px;
  height: auto;
}

/* Ensure header logo is centered */
header .flex.justify-center.items-center {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Aggressive constraints for any unexpectedly large decorative graphics (like the V-shape) */
.app-sidebar img, #app-sidebar svg, main img, main svg, footer img, footer svg {
  max-width: 360px;
  max-height: 360px;
  width: auto;
  height: auto;
  object-fit: contain;
}

/* Inline UI icons (small controls) should always remain small and not scale with container */
.inline-icon, .inline-icon svg, .btn-icon svg, .control-btn svg, #viewer-controls svg {
  width: 1.25rem;
  height: 1.25rem;
  max-width: none;
  max-height: none;
}

/* Summary tooltip styles */
.summary-tooltip {
  position: absolute;
  z-index: 80;
  background: #ffffff;
  border: 1px solid rgba(16,24,40,0.08);
  box-shadow: 0 6px 18px rgba(16,24,40,0.08);
  border-radius: 8px;
  padding: 10px;
  width: 300px;
}
.summary-tooltip.hidden { display: none; }
.summary-tooltip.visible { display: block; }
.summary-tooltip .tooltip-inner { display:flex; flex-direction:column; gap:6px; }
.summary-tooltip .tooltip-header { border-bottom: 1px solid rgba(16,24,40,0.04); padding-bottom:6px; }
.summary-tooltip .tooltip-content { max-height: 220px; overflow:auto; }
.summary-tooltip .tooltip-footer { border-top: 1px solid rgba(16,24,40,0.04); padding-top:6px; }

/* Ensure help arrow rotation happens around center */
#help-support-arrow {
  transform-origin: 50% 50%;
}

/* Strong safety for large decorative SVGs: only apply to decorative graphics and large brand assets.
   Small UI icons remain controlled by .inline-icon and .btn-icon svg rules. */
.decorative-graphic svg, .viewer-placeholder-img svg, .brand-fallback svg {
  max-width: 560px;
  max-height: 560px;
  width: auto;
  height: auto;
  display: inline-block;
}

/* If some decorative image is absolutely enormous, reduce its opacity and scale as a last resort */
.decorative-graphic.oversized {
  transform: scale(0.28) translateZ(0);
  transform-origin: top left;
  opacity: 0.95;
}

/* Make the viewer area respect available viewport height (account for header/stage/footer) */
#viewer {
  width: 100%;
  height: calc(100vh - var(--header-height) - var(--stage-bar-height) - var(--footer-height) - 3rem);
  max-height: 900px;
}

/* Header / stage-bar tweaks */
#stage-bar {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
}

.nav-btn {
  padding: 0.45rem 0.9rem;
  border-radius: 0.375rem;
}

.stage-btn {
  padding: 0.45rem 0.75rem;
  border-radius: 0.375rem;
}

/* Ensure images and SVGs don't blow out layout */
img, svg {
  max-width: 100%;
  height: auto;
  display: block;
}

/* Header logo: make it smaller and ensure our size wins over generic img rules */
header .site-logo {
  height: 40px; /* roughly half the previous large rendering */
  width: auto;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

/* Ensure the logo sits visually above the nav/stage buttons on small screens too */
#app-header .site-logo { order: -1; }

/* Give the stage-bar a small top margin so it never visually overlaps the header logo */
#stage-bar {
  margin-top: 0.25rem;
}

/* During Model selection, keep header non-sticky on desktop to avoid overlap */
@media (min-width: 1024px) {
  body.show-model-tiles #app-header {
    /* Scoped under body.show-model-tiles for higher specificity so we don't need !important */
    position: static;
    top: auto;
  }
}

/* Main content grid layout for desktop */
@media (min-width: 1024px) {
  body {
    grid-template-columns: 60fr 40fr; /* 60/40 split as specified */
    grid-template-rows: auto auto 1fr auto; /* Header, Stage Bar, Main Content, Footer */
  }

  /* Prevent the secondary column from expanding uncontrollably on very wide screens */
  @media (min-width: 1400px) {
    body {
      grid-template-columns: minmax(760px, 1fr) 360px; /* fixed-ish sidebar width */
    }
  }



  #stage-bar {
    grid-column: 1 / -1; /* Span all columns */
    grid-row: 2 / 3;
  }

  main {
    grid-column: 1 / 2; /* Viewer in first column */
    grid-row: 3 / 4; /* In the main content row */
  overflow: visible; /* Allow viewer controls to be visible outside strict clipping */
  height: 100%; /* Ensure main fills its grid cell */
  }

  /* Always offset the main content by the header height so a sticky header cannot overlap it */
  #app-main {
    box-sizing: border-box;
    padding-top: var(--header-height);
  }

  #app-sidebar {
    grid-column: 2 / 3; /* Sidebar in second column */
    grid-row: 3 / 4; /* In the main content row */
    width: 100%; /* Take full width of the column */
    /* Sidebar should be a flex column so we can split scrollable region and fixed footer-like area */
    display: flex;
    flex-direction: column;
    height: calc(100vh - var(--header-height) - var(--stage-bar-height) - var(--footer-height));
    max-height: calc(100vh - var(--header-height) - var(--stage-bar-height) - var(--footer-height));
    overflow: hidden; /* Prevent double scrollbars; internal area will scroll */
  }

  /* Scrollable region inside the sidebar */
  #app-sidebar .sidebar-scroll {
      overflow-y: auto;
      overflow-x: hidden; /* prevent accidental horizontal scroll */
      padding-right: 8px; /* give space for scrollbar */
    }

  /* Fixed bottom area inside the sidebar should not scroll with the tiles */
  #app-sidebar #sidebar-fixed-bottom {
    flex: 0 0 auto;
  }

  footer {
    grid-column: 1 / -1; /* Span all columns */
    grid-row: 4 / 5;
    position: static; /* Remove fixed positioning */
    bottom: auto;
    left: auto;
    z-index: auto;
  }
  
  /* Ensure viewer takes full height */
  #viewer {
    height: calc(100vh - var(--header-height) - var(--stage-bar-height) - var(--footer-height));
    /* The actual height will be managed by flex-1 in main-content */
  }
  
  /* Controls bar styling */
  #viewer-controls-container {
  height: auto;
  margin-top: 1rem;
  z-index: 20; /* Ensure viewer controls float above other content */
  }
}

/* Tooltip styles */
.tooltip {
  position: relative;
  display: inline-block;
}

.tooltip:hover::after {
  content: attr(data-tip);
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  white-space: nowrap;
  z-index: 10;
  margin-bottom: 5px;
}

.tooltip:hover::before {
  content: "";
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  border-width: 5px;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.8) transparent transparent transparent;
  margin-bottom: -5px;
  transform: translateX(-50%) rotate(180deg);
}

/* Banner animations */
.banner {
  animation: slide-in 0.3s ease-out forwards;
  opacity: 0;
  transform: translateY(-20px);
}

@keyframes slide-in {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.banner.opacity-0 {
  animation: slide-out 0.3s ease-in forwards;
}

@keyframes slide-out {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-20px);
  }
}

/* Focus styles */
:focus-visible {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

/* Model card styles */
.option-card {
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  cursor: pointer;
  position: relative;
}

.option-card:focus, .option-card:hover {
  box-shadow: 0 0 0 2px #2563eb33, 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  border-color: #2563eb;
  outline: none;
  z-index: 1;
}

.option-card[aria-pressed="true"] {
  border-color: #2563eb;
  box-shadow: 0 0 0 2px #2563eb33, 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
}

.option-card[disabled] {
  opacity: 0.6;
  cursor: not-allowed;
  box-shadow: none;
  border-color: #e5e7eb;
  background-color: #f9fafb;
}

/* Full-width model stage: center a single-column large preview layout */
/* Fullwidth model stage: center a constrained content area and let inner grid control columns */
.fullwidth-model-stage {
  display: block;
  padding: 2rem 1.5rem;
  max-width: none;
  margin: 0;
  width: 100%;
}


/* Model tiles layout when model-selection is active.
   Scoped under body.show-model-tiles so it does not affect other places where
   #model-options may appear (sidebar, other panels). */
body.show-model-tiles .fullwidth-model-stage #model-options,
body.show-model-tiles #stage-panel-0 #model-options,
.fullwidth-model-stage #model-options,
#stage-panel-0 #model-options {
  display: grid;
  grid-template-columns: repeat(3, minmax(220px, 1fr));
  gap: 1.25rem;
  align-items: start;
}

/* Responsive collapse for model tiles: 3 -> 2 -> 1 columns */
@media (max-width: 1100px) {
  body.show-model-tiles .fullwidth-model-stage #model-options,
  body.show-model-tiles #stage-panel-0 #model-options,
  .fullwidth-model-stage #model-options,
  #stage-panel-0 #model-options {
    grid-template-columns: repeat(2, minmax(200px, 1fr));
  }
}

@media (max-width: 640px) {
  body.show-model-tiles .fullwidth-model-stage #model-options,
  body.show-model-tiles #stage-panel-0 #model-options,
  .fullwidth-model-stage #model-options,
  #stage-panel-0 #model-options {
    grid-template-columns: 1fr;
  }
}

/* Model selection stage layout */
#stage-panel-0 {
  max-width: none;
  margin: 0;
  padding: 1.5rem;
  width: 100%;
}

/* Emergency fallback: ensure the Select Model panel and its inner grids/cards
   are visible and laid out even when JS toggles or timing is inconsistent. */
#stage-panel-0 {
  display: block !important;
}
#stage-panel-0 .model-row-grid {
  display: flex;
  gap: 1.5rem;
  justify-content: center;
  flex-wrap: wrap;
}
#stage-panel-0 .option-card {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  min-width: 200px;
  max-width: 320px;
}

/* Hide sidebar for model stage (assuming body has class 'stage-0' when model stage is active) */
.stage-0 #app-sidebar {
  display: none;
}

/* Make main take full width when sidebar is hidden */
.stage-0 main {
  grid-column: 1 / -1;
}

.model-row {
  margin-bottom: 2rem;
}

.model-row h3 {
  border-bottom: 1px solid #e5e7eb;
  padding-bottom: 0.5rem;
}

.model-row-grid {
  display: flex;
  gap: 1.5rem;
  overflow-x: hidden; /* prevent horizontal scrolling; allow wrapping */
  padding: 0.5rem 0;
  justify-content: center; /* center cards across the full container */
  flex-wrap: wrap; /* allow cards to wrap to new lines on narrow viewports */
}

.model-row .option-card {
  flex: 0 0 280px;
  min-height: 200px;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  position: relative;
}

.model-row .viewer-placeholder-img {
  width: 100%;
  height: 140px;
  object-fit: cover;
  border-radius: 6px;
  margin-bottom: 1rem;
}

.model-row .title-price-row {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  margin-bottom: 0.5rem;
}

.model-row .title {
  font-weight: 600;
  font-size: 16px;
}

.model-row .price-delta {
  font-size: 14px;
  color: #374151;
  font-weight: 500;
}

.model-row .description {
  font-size: 14px;
  color: #6b7280;
  text-align: center;
  line-height: 1.4;
}

.model-row .option-card.selected::after {
  content: 'âœ“';
  position: absolute;
  top: 8px;
  right: 8px;
  background: #2563eb;
  color: white;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  font-weight: bold;
}

.model-row .option-card.selected {
  border-width: 3px;
  border-color: #2563eb;
  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);
}

.model-row .option-card.selected .title {
  font-weight: 700;
}

/* Sidebar model options: smaller cards, 3 columns, 5px gaps for testing */
#app-sidebar #model-options {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 5px;
}

#app-sidebar #model-options .option-card {
  padding: 6px;
  min-height: 84px;
}

#app-sidebar #model-options .viewer-placeholder-img {
  height: 64px;
  object-fit: cover;
  margin-bottom: 6px;
}

/* Hide model tiles in the sidebar to keep the sidebar small. Model tiles in the
  Select Model panel (fullwidth stage or #stage-panel-0) are shown by default so
  they are not lost due to JS timing. */
#app-sidebar .option-card[data-id^="mdl-"] {
  display: none;
}

/* If the model panel is present inside a fullwidth-model-stage or the primary
   stage panel, ensure model-specific tiles are visible. This guards against
   timing issues where JS hasn't toggled body.show-model-tiles yet. */
.fullwidth-model-stage .option-card[data-id^="mdl-"],
#stage-panel-0 .option-card[data-id^="mdl-"] {
  display: block;
}

.stage-options-grid {
  display: grid;
  /* Use a 3-column layout by default. Use minmax(0, 1fr) to avoid intrinsic min-width
     from causing horizontal overflow in some browsers when children use padding
     or long content. */
  grid-template-columns: repeat(3, minmax(0, 1fr));
  gap: 12px;
  box-sizing: border-box; /* ensure padding doesn't add to intrinsic width */
  width: 100%;
  overflow-x: hidden; /* prevent horizontal scroll from accidentally appearing */
}
/* Responsive collapse for stage options grid: 3 -> 2 -> 1 columns */
@media (max-width: 1100px) {
  .stage-options-grid { grid-template-columns: repeat(2, minmax(0, 1fr)); gap: 10px; }
}
@media (max-width: 640px) {
  .stage-options-grid { grid-template-columns: 1fr; gap: 8px; }
}
.stage-options-grid .option-card {
  padding: 12px;
  min-height: 120px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  text-align: center;
  position: relative;
  box-sizing: border-box; /* make padding included in card width */
}
.stage-options-grid .viewer-placeholder-img {
  width: 100%;
  height: 80px;
  object-fit: cover;
  border-radius: 4px;
  margin-bottom: 8px;
}
.stage-options-grid .option-card .title-price-row {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
  margin-bottom: 4px;
}
.stage-options-grid .option-card .title {
  font-weight: 600;
  font-size: 14px;
}
.stage-options-grid .option-card .price-delta {
  font-size: 12px;
  color: #6b7280;
}
.stage-options-grid .option-card .description {
  font-size: 12px;
  color: #6b7280;
  line-height: 1.3;
}
.stage-options-grid .option-card.selected::after {
  content: 'âœ“';
  position: absolute;
  top: 4px;
  right: 4px;
  background: #2563eb;
  color: white;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  font-weight: bold;
}
.stage-options-grid .option-card.selected {
  border-width: 3px;
  border-color: #2563eb;
}
.stage-options-grid .option-card.selected .title {
  font-weight: 700;
}
.stage-options-grid .option-card[disabled] {
  filter: grayscale(100%);
  opacity: 0.6;
}
.stage-options-grid .option-card[disabled]:hover::before {
  content: attr(data-tooltip);
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  white-space: nowrap;
  z-index: 10;
  margin-bottom: 5px;
}

@media (max-width: 1100px) {
  #stage-panel-0 #model-options { grid-template-columns: repeat(2, minmax(200px, 1fr)); }
}
@media (max-width: 640px) {
  #stage-panel-0 #model-options { grid-template-columns: 1fr; }
}

.fullwidth-model-stage .option-card {
  width: 100%;
  min-height: 220px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 1rem;
  box-sizing: border-box;
}

.fullwidth-model-stage .viewer-placeholder-img {
  width: 100%;
  height: 180px;
  object-fit: contain;
  background: #ffffff;
}

.fullwidth-model-stage h3, .fullwidth-model-stage h2 {
  text-align: center;
}

/* Stage button styles */
.stage-btn[aria-current="step"] {
  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.05);
}

/* Define CSS variables for heights */
:root {
  --header-height: 60px; /* Approximate height of header */
  --stage-bar-height: 50px; /* Approximate height of stage bar */
  --footer-height: 80px; /* Approximate height of footer */
  /* Spacing and typographic tokens (merged from later definitions) */
  --space-xs: 6px;
  --space-sm: 12px;
  --space-md: 18px;
  --space-lg: 24px;
  --max-site-width: 1200px;
  --brand-green: #1b8f6b;
  --brand-dark: #263238;
}

/* Always reserve space at the top of the main area for the header height so
   the header cannot visually overlap the main content. JS updates
   --header-height at runtime for accuracy. */
#app-main {
  box-sizing: border-box;
  padding-top: var(--header-height);
}

/* When the Select Model panel is moved into #app-main it should not add any
   extra top margin that could cause the content to be cropped inside the
   scrollable container. */
#app-main > .fullwidth-model-stage {
  margin-top: 0;
}

/* ---------------- Model stage layout tweaks ---------------- */
/* Hide live price while on Select Model (stage 0). Stage manager toggles .show-model-tiles */
body.show-model-tiles #live-price { display: none; }

/* When on model stage, take full width and allow vertical scroll in main */
body.show-model-tiles #app-sidebar { display: none; }
body.show-model-tiles main { grid-column: 1 / -1; }
body.show-model-tiles #app-main { 
  max-width: none; 
  width: 100%; 
  overflow-y: auto; 
  height: calc(100vh - var(--header-height) - var(--stage-bar-height) - var(--footer-height));
}
/* Ensure app-main is offset below the header during model selection to avoid overlap */
body.show-model-tiles #app-main { padding-top: calc(var(--header-height) + 0.5rem); }
/* Override viewer container max width while on model stage */
body.show-model-tiles #app-main.viewer-container { max-width: none; padding-left: 1rem; padding-right: 1rem; }
/* Remove viewer panel chrome during model selection */
body.show-model-tiles #app-main.viewer-panel { background: transparent; box-shadow: none; }

/* Ensure the fullwidth model panel itself is not constrained */
.fullwidth-model-stage { max-width: none; width: 100%; }

/* Safety: force header out of the way while model selection is active. This
   applies regardless of viewport width to avoid overlap when class toggles
   don't take effect early. We intentionally use !important to override the
   header's sticky positioning during the model-selection flow. */
body.show-model-tiles #app-header {
  /* Scoped override to move header out of the way during model selection. Using
     the body.show-model-tiles prefix increases specificity so !important is
     not required. */
  position: static;
  top: auto;
  z-index: 1; /* keep header below floating controls */
}

/* If the fullwidth model stage is inserted directly after the header (via JS),
   ensure it doesn't get clipped and has a small gap below the stage bar. */
#app-header + .fullwidth-model-stage,
#app-header + #stage-panel-0 {
  margin-top: 0.5rem;
  padding-top: 0.25rem;
  box-sizing: border-box;
  width: 100%;
}

/* Center the inner model container and make it vertically scrollable
   within the viewport so long model lists remain accessible. */
#app-header + .fullwidth-model-stage,
#app-header + #stage-panel-0 {
  display: block;
  grid-column: 1 / -1; /* span both columns so tiles are centered across the whole viewport */
  width: 100%;
}

/* Allow the inner container to expand full width (no artificial max) - scrolling handled by parent */
#app-header + .fullwidth-model-stage > .flex,
#app-header + #stage-panel-0 > .flex {
  width: 100%;
  max-width: none; /* allow tiles to use full available width */
  box-sizing: border-box;
  padding-left: 1rem;
  padding-right: 1rem;
}

/* High-specificity override: when model stage is active, remove the site max width
   to ensure tiles can center across the entire viewport. This overrides the
   --max-site-width main-layout wrapper when present. */
body.show-model-tiles .main-layout,
body.show-model-tiles .top-stepper {
  max-width: none;
  width: 100%;
}

/* Force the stage-panel to occupy full viewport width when it's directly after the header/stepper */
#app-header + .fullwidth-model-stage,
#top-stepper + .fullwidth-model-stage,
#app-header + #stage-panel-0,
#top-stepper + #stage-panel-0 {
  width: 100%;
  max-width: none;
  margin: 0;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

/* When the model panel is a top-level child (inserted after header/stepper),
   ensure it spans the entire grid (both columns) so tiles can center across
   the full viewport. This avoids relying on 100vw tricks which can be clipped
   when a parent uses overflow or transforms. */
body.show-model-tiles > .fullwidth-model-stage,
body.show-model-tiles > #stage-panel-0,
body.show-model-tiles #app-header + .fullwidth-model-stage,
body.show-model-tiles #top-stepper + .fullwidth-model-stage,
body.show-model-tiles #app-header + #stage-panel-0,
body.show-model-tiles #top-stepper + #stage-panel-0 {
  /* When model-selection is active we ensure the panel spans the full grid
     using the body.show-model-tiles prefix to increase specificity and avoid
     !important overrides. */
  grid-column: 1 / -1;
  grid-row: 3 / 4; /* place in the main content row so it centers across both columns */
  width: 100%;
  max-width: none;
  margin: 0;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  box-sizing: border-box;
  position: relative;
}

/* Ensure the inner content of the model panel has proper width regardless of
   whether the panel is inserted after the header, stepper, or as a direct
   child of the body. Scrolling is handled by the parent panel. */
body > .fullwidth-model-stage > .flex,
body > #stage-panel-0 > .flex,
#app-header + .fullwidth-model-stage > .flex,
#top-stepper + .fullwidth-model-stage > .flex,
#app-header + #stage-panel-0 > .flex,
#top-stepper + #stage-panel-0 > .flex {
  width: 100%;
  max-width: none;
  box-sizing: border-box;
  padding-left: 1rem;
  padding-right: 1rem;
}

/* Also make the stage panel itself scrollable if it's a direct child (covers edge cases) */
body > .fullwidth-model-stage,
body > #stage-panel-0 {
  overflow-y: auto;
  max-height: calc(100vh - var(--header-height) - var(--stage-bar-height) - var(--footer-height) - 1rem);
}

/* Center the model rows and allow wrapping/centering of option-cards */
.model-row-grid {
  justify-content: center;
  flex-wrap: wrap;
}

/* Ensure the stage bar (if it lives inside header) doesn't float on top */
body.show-model-tiles #stage-bar {
  /* Scoped rule so we can remove !important */
  position: static;
  /* Add a small gap below the stage/nav bar so model tiles aren't flush against it */
  margin-bottom: 1rem;
}

/* Responsive adjustments */
@media (max-width: 1023px) { /* Tablet and smaller */
  body {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto 1fr auto; /* Header, Stage Bar, Main, Footer */
  }



  #stage-bar {
    grid-column: 1 / -1;
    grid-row: 2 / 3;
    position: static; /* Remove fixed position for tablet/mobile */
  }

  main {
    grid-column: 1 / -1;
    grid-row: 3 / 4;
    flex-direction: column; /* Stack viewer and sidebar vertically */
  }

  #app-sidebar {
    width: 100%;
    max-width: 100%;
    border-left: none;
    border-top: 1px solid #e5e7eb;
    grid-column: 1 / -1;
    grid-row: 4 / 5; /* Sidebar below main content */
  }

  footer {
    grid-column: 1 / -1;
    grid-row: 5 / 6;
    position: static; /* Remove fixed position for tablet/mobile */
  }
}

@media (max-width: 767px) { /* Mobile */
  #stage-bar {
    position: fixed; /* Re-apply fixed position for mobile */
    bottom: 0;
    top: auto;
    z-index: 40;
    height: var(--stage-bar-height); /* Ensure fixed height */
  }

  footer {
    position: static; /* Remove fixed positioning for mobile */
    bottom: auto;
    height: var(--footer-height); /* Ensure fixed height */
  }

  /* Adjust main and sidebar height for mobile fixed elements */
  main, #app-sidebar {
    height: calc(100vh - var(--header-height) - var(--stage-bar-height) - var(--footer-height));
    overflow-y: auto; /* Allow scrolling within main/sidebar if content overflows */
  }
}

/* Loading animation */
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.animate-spin {
  animation: spin 1s linear infinite;
}

/* Transitions */
#loading-overlay {
  transition: opacity 0.3s ease-out;
}

/* Help drawer scroll */
#help-content {
  max-height: calc(100vh - 120px);
  overflow-y: auto;
}

/* Collapsible Help & Support in Sidebar */
#sidebar-help-content {
  transition: max-height 0.3s ease-out, opacity 0.3s ease-out;
  max-height: 0;
  overflow: hidden;
  opacity: 0;
}

#sidebar-help-content.open {
  max-height: 500px; /* Arbitrary large value to allow content to show */
  opacity: 1;
}

#help-support-arrow.rotated {
  transform: rotate(180deg);
}

/* Viewer controls styling */
#viewer-controls {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 2rem; /* Increase spacing between controls */

/* ---------------------- High-impact visual improvements ---------------------- */

/* Typographic scale and spacing tokens */
:root {
  --space-xs: 6px;
  --space-sm: 12px;
  --space-md: 18px;
  --space-lg: 24px;
  --max-site-width: 1200px;
  --brand-green: #1b8f6b;
  --brand-dark: #263238;
}

/* Global typography tweaks */
body {
  font-family: 'Inter', system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial;
  color: #0f1720;
  line-height: 1.45;
  font-size: 15px;
}

h1, h2, h3 {
  color: #111827;
  margin-bottom: var(--space-sm);
}

p, label { font-size: 15px; color: #374151; }

/* Main layout helper used for centering and max width */
.main-layout {
  max-width: var(--max-site-width);
  margin: 0 auto;
  padding: 0 var(--space-md);
  display: grid;
  grid-template-columns: 1fr 340px;
  gap: 24px;
}

/* Viewer panel: center and make visual focus */
.viewer-panel {
  background: linear-gradient(180deg, #f6f8fa 0%, #ffffff 100%);
  border-radius: 8px;
  box-shadow: 0 6px 18px rgba(20,30,40,0.06);
  padding: 16px;
  min-height: 420px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Stepper / top-stage bar */
.top-stepper {
  display:flex;
  gap:8px;
  align-items:center;
  padding:12px 16px;
  background:#f3f6f8;
  border-radius:8px;
  box-shadow: 0 1px 0 rgba(0,0,0,0.03) inset;
  margin: 12px auto;
  width: calc(100% - 32px);
  max-width: var(--max-site-width);
}
/* Ensure the top stepper always spans the full app grid width so it doesn't
   push following panels into the sidebar column when elements are inserted
   between header and main. */
#top-stepper {
  grid-column: 1 / -1;
}
.top-stepper .step {
  flex:1;
  height:10px;
  background:#e6eef3;
  border-radius:6px;
  position:relative;
}
.top-stepper .step.active { background: var(--brand-dark); }
.top-stepper .step.completed { background: var(--brand-green); }

/* Summary card (right column) */
.summary-card {
  position: sticky;
  top: 24px;
  background: #fff;
  border-radius: 8px;
  padding: 18px;
  box-shadow: 0 8px 30px rgba(20,30,40,0.06);
  border: 1px solid rgba(20,30,40,0.04);
  align-self: start;
}
.summary-card .total { font-weight:700; font-size:1.15rem; color:#101827; }
.summary-card .next-btn {
  display:inline-block;
  background:var(--brand-green);
  color:#fff;
  padding:10px 16px;
  border-radius:6px;
  text-decoration:none;
  margin-top:12px;
}

/* Model card & thumbnails */
.model-card {
  display:flex;
  gap:12px;
  align-items:center;
}
.model-card img { width:160px; height:160px; object-fit:cover; border-radius:10px; box-shadow: 0 6px 18px rgba(20,30,40,0.06); }
.model-card .select-btn { background:var(--brand-dark); color:#fff; padding:8px 12px; border-radius:6px; }

/* Responsive: collapse two-column layout into single column on small screens */
@media (max-width: 880px) {
  .main-layout { grid-template-columns: 1fr; }
  .top-stepper { width: calc(100% - 24px); }
  .summary-card { position: relative; top: auto; }
}

/* Small helpers */
.muted { color:#6b7280; }
.rounded-md { border-radius: 8px; }

/* End high-impact rules */
  padding: 0.75rem 1rem;
  background-color: #f9fafb;
  border-radius: 0.5rem;
}

#viewer-controls button, 
#viewer-controls span {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 9999px;
  background-color: white;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  border: 1px solid #e5e7eb;
  transition: all 0.2s;
}

#viewer-controls button:hover,
#viewer-controls span:hover {
  background-color: #f3f4f6;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
}

#viewer-controls svg {
  width: 1.25rem;
  height: 1.25rem;
  color: #4b5563;
}

/* Control button styling */
.control-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 9999px;
  background-color: white;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  border: 1px solid #e5e7eb;
  transition: all 0.2s;
}

.control-btn:hover {
  background-color: #f3f4f6;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
}

.control-btn:focus-visible {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

.control-btn svg {
  width: 1.25rem;
  height: 1.25rem;
  color: #4b5563;
}

/* Loading animation enhancement */
#loading-overlay {
  background-color: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(4px);
  transition: opacity 0.3s ease-out;
}

#loading-overlay .animate-spin {
  border-top-color: transparent;
}

/* Consolidated Button System - single authoritative definition */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: 500;
  border-radius: 0.375rem;
  transition: all 0.2s ease;
  cursor: pointer;
}

.btn:focus-visible {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

.btn:disabled { cursor: not-allowed; opacity: 0.7; }

.btn-sm { padding: 0.375rem 0.75rem; font-size: 0.875rem; }
.btn-md { padding: 0.5rem 1rem; font-size: 0.875rem; }
.btn-lg { padding: 0.625rem 1.25rem; font-size: 1rem; }

.btn-primary { background-color: #2563eb; color: white; font-weight: 600; border: none; box-shadow: 0 1px 2px rgba(0,0,0,0.05); }
.btn-primary:hover { background-color: #1d4ed8; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
.btn-primary:active { background-color: #1e40af; transform: translateY(1px); }
.btn-primary:disabled { background-color: #93c5fd; }

.btn-secondary { background-color: #f3f4f6; color: #1f2937; border: 1px solid #e5e7eb; box-shadow: 0 1px 2px rgba(0,0,0,0.05); }
.btn-secondary:hover { background-color: #e5e7eb; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
.btn-secondary:active { background-color: #d1d5db; transform: translateY(1px); }
.btn-secondary:disabled { background-color: #f9fafb; color: #9ca3af; }

.btn-tertiary { background-color: transparent; color: #4b5563; border: none; }
.btn-tertiary:hover { background-color: #f3f4f6; }
.btn-tertiary:active { background-color: #e5e7eb; }
.btn-tertiary:disabled { color: #9ca3af; }

.btn-icon { display: flex; align-items: center; justify-content: center; width: 2.5rem; height: 2.5rem; border-radius: 9999px; background-color: transparent; color: #4b5563; border: none; }
.btn-icon svg { width: 1.25rem; height: 1.25rem; }
.btn-icon:hover { background-color: #f3f4f6; }

/* Control button */
.control-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 9999px;
  background-color: #fff;
  box-shadow: 0 1px 2px rgba(0,0,0,0.05);
  border: 1px solid #e5e7eb;
  color: #4b5563;
}

.control-btn svg { width: 1.25rem; height: 1.25rem; }

/* Canonical option-card base styles. Stage-specific layouts override sizing/padding as needed. */
.option-card {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 1rem;
  border-radius: 0.5rem;
  border: 1px solid #e5e7eb;
  background: #fff;
  cursor: pointer;
  text-align: center;
  transition: all 0.2s;
}
.option-card:hover { border-color: #818cf8; }
.option-card.selected { border-color: #6366f1; box-shadow: 0 0 0 4px rgba(99,102,241,0.08); }
.option-card.disabled { opacity: 0.5; cursor: not-allowed; background: #f8fafc; }

.stage-btn { flex: 1; padding: 0.5rem 0.25rem; text-align: center; font-size: 0.875rem; font-weight: 500; color: #6b7280; border-bottom: 2px solid transparent; }
.stage-btn.active { border-bottom-color: #6366f1; color: #4f46e5; }

.nav-btn { display: inline-flex; align-items: center; padding: 0.5rem 1rem; border-radius: 0.375rem; font-size: 0.875rem; font-weight: 500; color: #fff; background-color: #374151; border: 1px solid transparent; }
.nav-btn:hover { background-color: #1f2937; }

/* ======================================
   BUTTON STYLING SYSTEM
   ====================================== */

/* Base button styles */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: 500;
  border-radius: 0.375rem;
  transition: all 0.2s ease;
  cursor: pointer;
}

.btn:focus-visible {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

.btn:disabled {
  cursor: not-allowed;
  opacity: 0.7;
}

/* Button sizes */
.btn-sm {
  padding: 0.375rem 0.75rem;
  font-size: 0.875rem;
}

.btn-md {
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
}

.btn-lg {
  padding: 0.625rem 1.25rem;
  font-size: 1rem;
}

/* Primary button - for main actions */
.btn-primary {
  background-color: #2563eb; /* Blue 600 */
  color: white;
  font-weight: 600;
  border: none;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.btn-primary:hover {
  background-color: #1d4ed8; /* Blue 700 */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.btn-primary:active {
  background-color: #1e40af; /* Blue 800 */
  transform: translateY(1px);
}

.btn-primary:disabled {
  background-color: #93c5fd; /* Blue 300 */
}

/* Secondary button - for alternative actions */
.btn-secondary {
  background-color: #f3f4f6; /* Gray 100 */
  color: #1f2937; /* Gray 800 */
  border: 1px solid #e5e7eb; /* Gray 200 */
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.btn-secondary:hover {
  background-color: #e5e7eb; /* Gray 200 */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.btn-secondary:active {
  background-color: #d1d5db; /* Gray 300 */
  transform: translateY(1px);
}

.btn-secondary:disabled {
  background-color: #f9fafb; /* Gray 50 */
  color: #9ca3af; /* Gray 400 */
}

/* Tertiary button - for less important actions */
.btn-tertiary {
  background-color: transparent;
  color: #4b5563; /* Gray 600 */
  border: none;
}

.btn-tertiary:hover {
  background-color: #f3f4f6; /* Gray 100 */
}

.btn-tertiary:active {
  background-color: #e5e7eb; /* Gray 200 */
}

.btn-tertiary:disabled {
  color: #9ca3af; /* Gray 400 */
}

/* Icon button - for icon-only buttons */
.btn-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 9999px;
  background-color: transparent;
  color: #4b5563; /* Gray 600 */
  border: none;
}

.btn-icon:hover {
  background-color: #f3f4f6; /* Gray 100 */
}

.btn-icon:active {
  background-color: #e5e7eb; /* Gray 200 */
}

.btn-icon svg {
  width: 1.25rem;
  height: 1.25rem;
}

/* Primary icon button variant */
.btn-icon-primary {
  background-color: #2563eb; /* Blue 600 */
  color: white;
}

.btn-icon-primary:hover {
  background-color: #1d4ed8; /* Blue 700 */
}

/* Control button - for 3D viewer controls */
.control-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 9999px;
  background-color: white;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  border: 1px solid #e5e7eb; /* Gray 200 */
  transition: all 0.2s;
}

.control-btn:hover {
  background-color: #f3f4f6; /* Gray 100 */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.control-btn:active {
  background-color: #e5e7eb; /* Gray 200 */
  transform: translateY(1px);
}

.control-btn svg {
  width: 1.25rem;
  height: 1.25rem;
  color: #4b5563; /* Gray 600 */
}

/* Option card - for selectable cards */
.option-card {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: left;
  width: 100%;
  padding: 0.75rem;
  border-radius: 0.5rem;
  border: 1px solid #e5e7eb; /* Gray 200 */
  background-color: white;
  transition: all 0.2s;
  cursor: pointer;
  position: relative;
}

.option-card:hover {
  border-color: #93c5fd; /* Blue 300 */
  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);
}

.option-card:focus {
  outline: none;
  border-color: #2563eb; /* Blue 600 */
  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.2);
}

.option-card[aria-pressed="true"] {
  border-color: #2563eb; /* Blue 600 */
  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.2);
}

.option-card[disabled] {
  opacity: 0.6;
  cursor: not-allowed;
  box-shadow: none;
  border-color: #e5e7eb; /* Gray 200 */
}

/* Loading skeleton overlay used when options change */
.viewer-skeleton {
  transition: opacity 0.28s ease;
  background: rgba(255,255,255,0.6);
}
.skeleton-card {
  border-radius: 0.5rem;
  box-shadow: inset 0 2px 10px rgba(0,0,0,0.04);
}

/* Stage navigation button */
.stage-btn {
  padding: 0.375rem 0.75rem;
  border-radius: 0.375rem;
  font-weight: 500;
  transition: all 0.2s;
}
/* Visual mapping for stage buttons (requested):
   - Non-clickable (disabled) = light tone (no hover)
   - Active stage (aria-current="step") = blue
   - Clickable previous stages = dark tone, hover -> blue
*/

/* Base: neutral/light look so disabled/empty appear subtle */
.stage-btn {
  background-color: transparent;
  color: #6b7280; /* Gray 500 */
}

/* Active stage: prominent blue */
.stage-btn[aria-current="step"] {
  background-color: #2563eb; /* Blue 600 */
  color: #ffffff;
  font-weight: 600;
  border-bottom-color: transparent;
}

/* Clickable stages (usually previous stages) â€” dark background, white text.
   Hovering a clickable stage shows the blue accent. */
.stage-btn:not([aria-current="step"]):not([disabled]) {
  background-color: #1f2937; /* Gray 800 / dark */
  color: #ffffff;
}
.stage-btn:not([aria-current="step"]):not([disabled]):hover {
  background-color: #2563eb; /* Blue 600 on hover */
  color: #ffffff;
}

/* Disabled (non-clickable) stages: light, no hover effect */
.stage-btn[disabled] {
  background-color: #f3f4f6; /* Gray 100 / light */
  color: #9ca3af; /* Gray 400 */
  cursor: not-allowed;
  pointer-events: none; /* ensure no hover/interaction */
}

/* Navigation buttons (prev/next) */
.nav-btn {
  padding: 0.375rem 0.75rem;
  border-radius: 0.375rem;
  font-weight: 500;
  transition: all 0.2s;
}

/* New mapping for nav buttons similar to stage buttons:
   - Disabled uses previous hover (Gray 100)
   - Enabled uses blue
   - Hover uses the current grey (dark gray background)
*/
/* Prev/Next button rules per request:
   - Disabled (non-clickable): light, no hover
   - Enabled (clickable): dark default, hover -> blue
*/

.nav-btn:disabled {
  background-color: #f3f4f6; /* Gray 100 / light */
  color: #9ca3af; /* Gray 400 */
  cursor: not-allowed;
  pointer-events: none;
}

.nav-btn:not([disabled]) {
  background-color: #1f2937; /* Gray 800 / dark */
  color: #ffffff;
}

.nav-btn:not([disabled]):hover {
  background-color: #2563eb; /* Blue 600 on hover */
  color: #ffffff;
}
